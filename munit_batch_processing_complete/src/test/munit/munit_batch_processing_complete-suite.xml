<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="munit_batch_processing_complete-suite.xml" />
	<munit:test name="sample3Flow-test" doc:id="c2b80cb5-b691-4ced-ba0c-366d13008abf" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock sample3Batch_Job" doc:id="7e08d4a8-1fa8-4fb3-b677-a6276dbb3ed1" processor="batch:job">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ec4ce814-09d3-4150-bbe4-fff505ba16aa" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://sample3Flowtest\mock_payload.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="batchJobInstanceId" value="#[readUrl('classpath://sample3Flowtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="8871c86a-040d-46f2-a72f-95f078491e5f" >
				<munit:payload value="#[readUrl('classpath://sample3Flowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://sample3Flowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sample3Flow" doc:id="20960fe6-becf-4ed1-8d37-596f2b65c111" name="sample3Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="66515c35-7349-4c8f-ab6d-934eb4242230" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sample3Flowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="sample3Flow-test1" doc:id="d4ac5f75-71b0-4a16-b95b-fc2c38840e7a" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="28b3b6a2-5fb3-4887-b4ea-750c4177054f" >
				<munit:payload value="#[readUrl('classpath://sample3Flowtest1\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://sample3Flowtest1\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sample3Flow" doc:id="b6e6212c-667d-47a6-89fb-46daa7971364" name="sample3Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="0e2d779f-3cc2-440d-9a3a-f5d650dc3ab7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sample3Flowtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
